/* 
 * Okta API
 *
 * Allows customers to easily access the Okta API
 *
 * OpenAPI spec version: 1.9.0
 * Contact: devex-public@okta.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct PasswordDictionary {
  #[serde(rename = "common")]
  common: Option<crate::models::PasswordDictionaryCommon>
}

impl PasswordDictionary {
  pub fn new() -> PasswordDictionary {
    PasswordDictionary {
      common: None
    }
  }

  pub fn set_common(&mut self, common: crate::models::PasswordDictionaryCommon) {
    self.common = Some(common);
  }

  pub fn with_common(mut self, common: crate::models::PasswordDictionaryCommon) -> PasswordDictionary {
    self.common = Some(common);
    self
  }

  pub fn common(&self) -> Option<&crate::models::PasswordDictionaryCommon> {
    self.common.as_ref()
  }

  pub fn reset_common(&mut self) {
    self.common = None;
  }

}



