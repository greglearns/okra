/* 
 * Okta API
 *
 * Allows customers to easily access the Okta API
 *
 * OpenAPI spec version: 1.9.0
 * Contact: devex-public@okta.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct OktaSignOnPolicyRuleActions {
  #[serde(rename = "signon")]
  signon: Option<crate::models::OktaSignOnPolicyRuleSignonActions>
}

impl OktaSignOnPolicyRuleActions {
  pub fn new() -> OktaSignOnPolicyRuleActions {
    OktaSignOnPolicyRuleActions {
      signon: None
    }
  }

  pub fn set_signon(&mut self, signon: crate::models::OktaSignOnPolicyRuleSignonActions) {
    self.signon = Some(signon);
  }

  pub fn with_signon(mut self, signon: crate::models::OktaSignOnPolicyRuleSignonActions) -> OktaSignOnPolicyRuleActions {
    self.signon = Some(signon);
    self
  }

  pub fn signon(&self) -> Option<&crate::models::OktaSignOnPolicyRuleSignonActions> {
    self.signon.as_ref()
  }

  pub fn reset_signon(&mut self) {
    self.signon = None;
  }

}



