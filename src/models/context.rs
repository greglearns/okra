/* 
 * Okta API
 *
 * Allows customers to easily access the Okta API
 *
 * OpenAPI spec version: 1.9.0
 * Contact: devex-public@okta.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct Context {
  #[serde(rename = "deviceToken")]
  device_token: Option<String>
}

impl Context {
  pub fn new() -> Context {
    Context {
      device_token: None
    }
  }

  pub fn set_device_token(&mut self, device_token: String) {
    self.device_token = Some(device_token);
  }

  pub fn with_device_token(mut self, device_token: String) -> Context {
    self.device_token = Some(device_token);
    self
  }

  pub fn device_token(&self) -> Option<&String> {
    self.device_token.as_ref()
  }

  pub fn reset_device_token(&mut self) {
    self.device_token = None;
  }

}



