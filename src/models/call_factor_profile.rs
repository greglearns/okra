/* 
 * Okta API
 *
 * Allows customers to easily access the Okta API
 *
 * OpenAPI spec version: 1.9.0
 * Contact: devex-public@okta.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct CallFactorProfile {
  #[serde(rename = "phoneExtension")]
  phone_extension: Option<String>,
  #[serde(rename = "phoneNumber")]
  phone_number: Option<String>
}

impl CallFactorProfile {
  pub fn new() -> CallFactorProfile {
    CallFactorProfile {
      phone_extension: None,
      phone_number: None
    }
  }

  pub fn set_phone_extension(&mut self, phone_extension: String) {
    self.phone_extension = Some(phone_extension);
  }

  pub fn with_phone_extension(mut self, phone_extension: String) -> CallFactorProfile {
    self.phone_extension = Some(phone_extension);
    self
  }

  pub fn phone_extension(&self) -> Option<&String> {
    self.phone_extension.as_ref()
  }

  pub fn reset_phone_extension(&mut self) {
    self.phone_extension = None;
  }

  pub fn set_phone_number(&mut self, phone_number: String) {
    self.phone_number = Some(phone_number);
  }

  pub fn with_phone_number(mut self, phone_number: String) -> CallFactorProfile {
    self.phone_number = Some(phone_number);
    self
  }

  pub fn phone_number(&self) -> Option<&String> {
    self.phone_number.as_ref()
  }

  pub fn reset_phone_number(&mut self) {
    self.phone_number = None;
  }

}



