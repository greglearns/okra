/* 
 * Okta API
 *
 * Allows customers to easily access the Okta API
 *
 * OpenAPI spec version: 1.9.0
 * Contact: devex-public@okta.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct AutoLoginApplicationSettingsSignOn {
  #[serde(rename = "loginUrl")]
  login_url: Option<String>,
  #[serde(rename = "redirectUrl")]
  redirect_url: Option<String>
}

impl AutoLoginApplicationSettingsSignOn {
  pub fn new() -> AutoLoginApplicationSettingsSignOn {
    AutoLoginApplicationSettingsSignOn {
      login_url: None,
      redirect_url: None
    }
  }

  pub fn set_login_url(&mut self, login_url: String) {
    self.login_url = Some(login_url);
  }

  pub fn with_login_url(mut self, login_url: String) -> AutoLoginApplicationSettingsSignOn {
    self.login_url = Some(login_url);
    self
  }

  pub fn login_url(&self) -> Option<&String> {
    self.login_url.as_ref()
  }

  pub fn reset_login_url(&mut self) {
    self.login_url = None;
  }

  pub fn set_redirect_url(&mut self, redirect_url: String) {
    self.redirect_url = Some(redirect_url);
  }

  pub fn with_redirect_url(mut self, redirect_url: String) -> AutoLoginApplicationSettingsSignOn {
    self.redirect_url = Some(redirect_url);
    self
  }

  pub fn redirect_url(&self) -> Option<&String> {
    self.redirect_url.as_ref()
  }

  pub fn reset_redirect_url(&mut self) {
    self.redirect_url = None;
  }

}



