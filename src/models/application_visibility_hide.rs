/* 
 * Okta API
 *
 * Allows customers to easily access the Okta API
 *
 * OpenAPI spec version: 1.9.0
 * Contact: devex-public@okta.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ApplicationVisibilityHide {
  #[serde(rename = "iOS")]
  i_os: Option<bool>,
  #[serde(rename = "web")]
  web: Option<bool>
}

impl ApplicationVisibilityHide {
  pub fn new() -> ApplicationVisibilityHide {
    ApplicationVisibilityHide {
      i_os: None,
      web: None
    }
  }

  pub fn set_i_os(&mut self, i_os: bool) {
    self.i_os = Some(i_os);
  }

  pub fn with_i_os(mut self, i_os: bool) -> ApplicationVisibilityHide {
    self.i_os = Some(i_os);
    self
  }

  pub fn i_os(&self) -> Option<&bool> {
    self.i_os.as_ref()
  }

  pub fn reset_i_os(&mut self) {
    self.i_os = None;
  }

  pub fn set_web(&mut self, web: bool) {
    self.web = Some(web);
  }

  pub fn with_web(mut self, web: bool) -> ApplicationVisibilityHide {
    self.web = Some(web);
    self
  }

  pub fn web(&self) -> Option<&bool> {
    self.web.as_ref()
  }

  pub fn reset_web(&mut self) {
    self.web = None;
  }

}



