/* 
 * Okta API
 *
 * Allows customers to easily access the Okta API
 *
 * OpenAPI spec version: 1.9.0
 * Contact: devex-public@okta.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct AutoLoginApplication {
  #[serde(rename = "credentials")]
  credentials: Option<crate::models::SchemeApplicationCredentials>,
  #[serde(rename = "settings")]
  settings: Option<crate::models::AutoLoginApplicationSettings>
}

impl AutoLoginApplication {
  pub fn new() -> AutoLoginApplication {
    AutoLoginApplication {
      credentials: None,
      settings: None
    }
  }

  pub fn set_credentials(&mut self, credentials: crate::models::SchemeApplicationCredentials) {
    self.credentials = Some(credentials);
  }

  pub fn with_credentials(mut self, credentials: crate::models::SchemeApplicationCredentials) -> AutoLoginApplication {
    self.credentials = Some(credentials);
    self
  }

  pub fn credentials(&self) -> Option<&crate::models::SchemeApplicationCredentials> {
    self.credentials.as_ref()
  }

  pub fn reset_credentials(&mut self) {
    self.credentials = None;
  }

  pub fn set_settings(&mut self, settings: crate::models::AutoLoginApplicationSettings) {
    self.settings = Some(settings);
  }

  pub fn with_settings(mut self, settings: crate::models::AutoLoginApplicationSettings) -> AutoLoginApplication {
    self.settings = Some(settings);
    self
  }

  pub fn settings(&self) -> Option<&crate::models::AutoLoginApplicationSettings> {
    self.settings.as_ref()
  }

  pub fn reset_settings(&mut self) {
    self.settings = None;
  }

}



