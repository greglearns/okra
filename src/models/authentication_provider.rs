/* 
 * Okta API
 *
 * Allows customers to easily access the Okta API
 *
 * OpenAPI spec version: 1.9.0
 * Contact: devex-public@okta.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct AuthenticationProvider {
  #[serde(rename = "name")]
  name: Option<String>,
  #[serde(rename = "type")]
  _type: Option<crate::models::AuthenticationProviderType>
}

impl AuthenticationProvider {
  pub fn new() -> AuthenticationProvider {
    AuthenticationProvider {
      name: None,
      _type: None
    }
  }

  pub fn set_name(&mut self, name: String) {
    self.name = Some(name);
  }

  pub fn with_name(mut self, name: String) -> AuthenticationProvider {
    self.name = Some(name);
    self
  }

  pub fn name(&self) -> Option<&String> {
    self.name.as_ref()
  }

  pub fn reset_name(&mut self) {
    self.name = None;
  }

  pub fn set__type(&mut self, _type: crate::models::AuthenticationProviderType) {
    self._type = Some(_type);
  }

  pub fn with__type(mut self, _type: crate::models::AuthenticationProviderType) -> AuthenticationProvider {
    self._type = Some(_type);
    self
  }

  pub fn _type(&self) -> Option<&crate::models::AuthenticationProviderType> {
    self._type.as_ref()
  }

  pub fn reset__type(&mut self) {
    self._type = None;
  }

}



