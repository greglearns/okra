/* 
 * Okta API
 *
 * Allows customers to easily access the Okta API
 *
 * OpenAPI spec version: 1.9.0
 * Contact: devex-public@okta.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct BookmarkApplicationSettingsApplication {
  #[serde(rename = "requestIntegration")]
  request_integration: Option<bool>,
  #[serde(rename = "url")]
  url: Option<String>
}

impl BookmarkApplicationSettingsApplication {
  pub fn new() -> BookmarkApplicationSettingsApplication {
    BookmarkApplicationSettingsApplication {
      request_integration: None,
      url: None
    }
  }

  pub fn set_request_integration(&mut self, request_integration: bool) {
    self.request_integration = Some(request_integration);
  }

  pub fn with_request_integration(mut self, request_integration: bool) -> BookmarkApplicationSettingsApplication {
    self.request_integration = Some(request_integration);
    self
  }

  pub fn request_integration(&self) -> Option<&bool> {
    self.request_integration.as_ref()
  }

  pub fn reset_request_integration(&mut self) {
    self.request_integration = None;
  }

  pub fn set_url(&mut self, url: String) {
    self.url = Some(url);
  }

  pub fn with_url(mut self, url: String) -> BookmarkApplicationSettingsApplication {
    self.url = Some(url);
    self
  }

  pub fn url(&self) -> Option<&String> {
    self.url.as_ref()
  }

  pub fn reset_url(&mut self) {
    self.url = None;
  }

}



