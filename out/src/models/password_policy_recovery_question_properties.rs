/* 
 * Okta API
 *
 * Allows customers to easily access the Okta API
 *
 * OpenAPI spec version: 1.9.0
 * Contact: devex-public@okta.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct PasswordPolicyRecoveryQuestionProperties {
  #[serde(rename = "complexity")]
  complexity: Option<::models::PasswordPolicyRecoveryQuestionComplexity>
}

impl PasswordPolicyRecoveryQuestionProperties {
  pub fn new() -> PasswordPolicyRecoveryQuestionProperties {
    PasswordPolicyRecoveryQuestionProperties {
      complexity: None
    }
  }

  pub fn set_complexity(&mut self, complexity: ::models::PasswordPolicyRecoveryQuestionComplexity) {
    self.complexity = Some(complexity);
  }

  pub fn with_complexity(mut self, complexity: ::models::PasswordPolicyRecoveryQuestionComplexity) -> PasswordPolicyRecoveryQuestionProperties {
    self.complexity = Some(complexity);
    self
  }

  pub fn complexity(&self) -> Option<&::models::PasswordPolicyRecoveryQuestionComplexity> {
    self.complexity.as_ref()
  }

  pub fn reset_complexity(&mut self) {
    self.complexity = None;
  }

}



