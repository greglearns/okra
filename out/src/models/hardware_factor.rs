/* 
 * Okta API
 *
 * Allows customers to easily access the Okta API
 *
 * OpenAPI spec version: 1.9.0
 * Contact: devex-public@okta.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct HardwareFactor {
  #[serde(rename = "profile")]
  profile: Option<::models::HardwareFactorProfile>
}

impl HardwareFactor {
  pub fn new() -> HardwareFactor {
    HardwareFactor {
      profile: None
    }
  }

  pub fn set_profile(&mut self, profile: ::models::HardwareFactorProfile) {
    self.profile = Some(profile);
  }

  pub fn with_profile(mut self, profile: ::models::HardwareFactorProfile) -> HardwareFactor {
    self.profile = Some(profile);
    self
  }

  pub fn profile(&self) -> Option<&::models::HardwareFactorProfile> {
    self.profile.as_ref()
  }

  pub fn reset_profile(&mut self) {
    self.profile = None;
  }

}



