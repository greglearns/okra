/* 
 * Okta API
 *
 * Allows customers to easily access the Okta API
 *
 * OpenAPI spec version: 1.9.0
 * Contact: devex-public@okta.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct PasswordPolicyRecoveryFactorSettings {
  #[serde(rename = "status")]
  status: Option<String>
}

impl PasswordPolicyRecoveryFactorSettings {
  pub fn new() -> PasswordPolicyRecoveryFactorSettings {
    PasswordPolicyRecoveryFactorSettings {
      status: None
    }
  }

  pub fn set_status(&mut self, status: String) {
    self.status = Some(status);
  }

  pub fn with_status(mut self, status: String) -> PasswordPolicyRecoveryFactorSettings {
    self.status = Some(status);
    self
  }

  pub fn status(&self) -> Option<&String> {
    self.status.as_ref()
  }

  pub fn reset_status(&mut self) {
    self.status = None;
  }

}



