/* 
 * Okta API
 *
 * Allows customers to easily access the Okta API
 *
 * OpenAPI spec version: 1.9.0
 * Contact: devex-public@okta.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct GroupRuleGroupAssignment {
  #[serde(rename = "groupIds")]
  group_ids: Option<Vec<String>>
}

impl GroupRuleGroupAssignment {
  pub fn new() -> GroupRuleGroupAssignment {
    GroupRuleGroupAssignment {
      group_ids: None
    }
  }

  pub fn set_group_ids(&mut self, group_ids: Vec<String>) {
    self.group_ids = Some(group_ids);
  }

  pub fn with_group_ids(mut self, group_ids: Vec<String>) -> GroupRuleGroupAssignment {
    self.group_ids = Some(group_ids);
    self
  }

  pub fn group_ids(&self) -> Option<&Vec<String>> {
    self.group_ids.as_ref()
  }

  pub fn reset_group_ids(&mut self) {
    self.group_ids = None;
  }

}



