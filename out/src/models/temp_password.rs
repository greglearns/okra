/* 
 * Okta API
 *
 * Allows customers to easily access the Okta API
 *
 * OpenAPI spec version: 1.9.0
 * Contact: devex-public@okta.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct TempPassword {
  #[serde(rename = "tempPassword")]
  temp_password: Option<String>
}

impl TempPassword {
  pub fn new() -> TempPassword {
    TempPassword {
      temp_password: None
    }
  }

  pub fn set_temp_password(&mut self, temp_password: String) {
    self.temp_password = Some(temp_password);
  }

  pub fn with_temp_password(mut self, temp_password: String) -> TempPassword {
    self.temp_password = Some(temp_password);
    self
  }

  pub fn temp_password(&self) -> Option<&String> {
    self.temp_password.as_ref()
  }

  pub fn reset_temp_password(&mut self) {
    self.temp_password = None;
  }

}



