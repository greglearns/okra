/* 
 * Okta API
 *
 * Allows customers to easily access the Okta API
 *
 * OpenAPI spec version: 1.9.0
 * Contact: devex-public@okta.com
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct PasswordPolicyDelegationSettings {
  #[serde(rename = "options")]
  options: Option<::models::PasswordPolicyDelegationSettingsOptions>
}

impl PasswordPolicyDelegationSettings {
  pub fn new() -> PasswordPolicyDelegationSettings {
    PasswordPolicyDelegationSettings {
      options: None
    }
  }

  pub fn set_options(&mut self, options: ::models::PasswordPolicyDelegationSettingsOptions) {
    self.options = Some(options);
  }

  pub fn with_options(mut self, options: ::models::PasswordPolicyDelegationSettingsOptions) -> PasswordPolicyDelegationSettings {
    self.options = Some(options);
    self
  }

  pub fn options(&self) -> Option<&::models::PasswordPolicyDelegationSettingsOptions> {
    self.options.as_ref()
  }

  pub fn reset_options(&mut self) {
    self.options = None;
  }

}



